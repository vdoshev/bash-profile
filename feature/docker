#!/usr/bin/env bash
alias compose='docker compose'

alias d='docker'
alias d-exec='docker exec -it'
alias d-run='docker run -it --rm'
alias d-sh='docker run -it --rm --entrypoint //bin/sh'
alias d-images='\docker images --format="{{.Repository}}:{{.Tag}} {{.ID}} {{.Size}}" | sort | column -t -s " "'
alias d-stats='(\docker ps -q | xargs \docker stats --no-stream)'
alias d-stop='\docker container stop "$(\docker container ls -q)"'
alias d-prune='(docker system prune -f; docker volume prune -f)'
alias d-ls=d-images

function docker_image_file() {
  local image=${1}    # registry/repository/image:tag@sha256:1234
  image=${image%@*}   # registry/repository/image:tag
  image=${image##*/}  # image:tag
  image=${image//:/_} # image_tag
  echo "${image}"
}

function docker_save() {
  local image=${1:?"Docker image"}
  docker save "${image}" | gzip -9 > "$(docker_image_file "${image}").tar.gz"
}

function docker_load() {
  docker load < "$1"
}

function docker_push_to() {
  local image=$1 remote=$2 remote_image
  remote_image=${remote}/${image#*/}
  docker tag "${image}" "${remote_image}"
  docker push "${remote_image}"
}

# Remove all but the latest image for each repository
function docker_reduce() {
  local repo id

  if [[ $# -eq 0 ]]; then
    # shellcheck disable=SC2046
    set -- $(\docker images --format="{{.Repository}}" | sort | uniq)
  fi

  for repo in "$@"; do
    for id in $(\docker images --format="{{.CreatedAt}}|{{.ID}}" --filter="reference=${repo}" | sort -r | cut -d'|' -f2 | tail -n +2); do
      \docker rmi "${id}"
    done
  done
}
alias d-reduce=docker_reduce

function d-volume-ls() {
  \docker run -it --rm -v "${1:?volume}:/vol" busybox ls -l //vol
}
