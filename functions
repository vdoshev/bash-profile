#!/usr/bin/env bash

if [[ -n ${DRIVES_PATH} ]]; then
  # Convert *nix path to Windows path, e.g. /c/foo -> C:/foo
  function winpath() {
    local nix_path=$1
    local sed_script="s|^${DRIVES_PATH/%\//}/\([a-zA-Z]\)/|\1:/|"
    local ret
    ret=$(echo "${nix_path}" | sed -e "${sed_script}")
    if [[ ${ret:1:1} = ':' ]]; then
      echo "${ret^}"
    else
      echo "${ret}"
    fi
  }

  # Convert Windows path to *nix path, e.g. C:/foo -> /c/foo
  function nixpath() {
    local win_path=$1
    local sed_script="s|\\\\|/|g; s|^\([a-zA-Z]\):|${DRIVES_PATH/%\//}/\1|"
    echo "${win_path,}" | sed -e "${sed_script}"
  }
fi

# Make directory (or directories) and change the shell working directory
function mkcd() {
  mkdir -p "$1" && cd "$1" || return $?
}

# Go to the first directory where the command executable is foundwhich
function cdto() {
  local cmd=${1:?command}
  local -a paths
  IFS='' read -r -a paths < <(which "${cmd}" 2> /dev/null)
  if [[ ${#paths[@]} -gt 0 ]]; then
    cd "$(dirname "${paths[0]}")" || return 2
    return 0
  fi
  return 1
}

# Swap two files
function swap-files() {
  local tmp=tmp.$$
  mv "$1" $tmp \
    && mv "$2" "$1" \
    && mv $tmp "$2"
}

# Current date/time in different formats
function now() {
  case ${1:-d} in
    z) date '+%Y-%m-%dT%H:%M:%SZ' ;; # 2023-10-13T11:06:50Z
    d) date '+%Y-%m-%d %H:%M:%S'  ;; # 2023-10-13 11:09:53
    f) date '+%Y%m%d-%H%M%S'      ;; # 20231013-111012
    *)
      # Backup a file?
      if [[ -f ${1:-} ]]; then
        cp -v "${1}" "${1}-$(now f)"
      fi
      ;;
  esac
}

# Rename files matching "*${1}*" to "*${2}*"
function rename-all() {
  local match=$1 replace=$2
  for filename in *"${match}"*; do
    mv -v "${filename}" "${filename/${match}/${replace}}"
  done
}

# Print META-INF/MANIFEST.MF of a jar file
function jar-info() {
  local dir
  for jar in "$@"; do
    dir=$(mktemp -d)
    unzip -q "${jar}" -d "${dir}" META-INF/MANIFEST.MF
    mv "${dir}/META-INF/MANIFEST.MF" "${jar}-info"
    rm -rf "${dir}"
  done
}
